{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useFonts } from 'expo-font';\nimport * as Splashscreen from 'expo-splash-screen';\nimport { useCallback } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { CountryDetails, HotelDetails, HotelList, HotelSearch, Onboarding, PlaceDetails, Recommended, Search } from \"./screens\";\nimport BottomTabNavigation from \"./navigation/BottomTabNavigation\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  var _useFonts = useFonts({\n      regular: require(\"./assets/fonts/regular.otf\"),\n      medium: require(\"./assets/fonts/medium.otf\"),\n      bold: require(\"./assets/fonts/bold.otf\"),\n      light: require(\"./assets/fonts/light.otf\"),\n      xtrabold: require(\"./assets/fonts/xtrabold.otf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontsLoaded = _useFonts2[0];\n  var onLayoutRootView = useCallback(_asyncToGenerator(function* () {\n    if (fontsLoaded) {\n      yield Splashscreen.hideAsync();\n    }\n  }), [fontsLoaded]);\n  if (!fontsLoaded) {\n    return null;\n  }\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Onboard\",\n        component: Onboarding,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Bottom\",\n        component: BottomTabNavigation,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Search\",\n        component: Search,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Country Details\",\n        component: CountryDetails,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Recommended\",\n        component: Recommended,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Place Details\",\n        component: PlaceDetails,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Hotel Details\",\n        component: HotelDetails,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Hotel List\",\n        component: HotelList,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Hotel Search\",\n        component: HotelSearch,\n        options: {\n          headerShown: false\n        }\n      })]\n    })\n  });\n}","map":{"version":3,"names":["useFonts","Splashscreen","useCallback","NavigationContainer","createNativeStackNavigator","CountryDetails","HotelDetails","HotelList","HotelSearch","Onboarding","PlaceDetails","Recommended","Search","BottomTabNavigation","jsx","_jsx","jsxs","_jsxs","Stack","App","_useFonts","regular","require","medium","bold","light","xtrabold","_useFonts2","_slicedToArray","fontsLoaded","onLayoutRootView","_asyncToGenerator","hideAsync","children","Navigator","Screen","name","component","options","headerShown"],"sources":["C:/Users/user/Downloads/Projects/1-JavaScript/travel_app/travel_app/App.js"],"sourcesContent":["import { useFonts } from 'expo-font';\nimport * as Splashscreen from 'expo-splash-screen';\nimport { useCallback } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { CountryDetails, HotelDetails, HotelList, HotelSearch, Onboarding, PlaceDetails, Recommended, Search } from './screens';\nimport BottomTabNavigation from './navigation/BottomTabNavigation';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function App() {\n  const [fontsLoaded] = useFonts({\n    regular: require('./assets/fonts/regular.otf'),\n    medium: require('./assets/fonts/medium.otf'),\n    bold: require('./assets/fonts/bold.otf'),\n    light: require('./assets/fonts/light.otf'),\n    xtrabold: require('./assets/fonts/xtrabold.otf'),\n  })\n\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      await Splashscreen.hideAsync();\n    }\n  }, [fontsLoaded])\n\n  if (!fontsLoaded) {\n    return null\n  }\n\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen name='Onboard' component={Onboarding} options={{ headerShown: false }} />\n        <Stack.Screen name='Bottom' component={BottomTabNavigation} options={{ headerShown: false }} />\n        <Stack.Screen name='Search' component={Search} options={{ headerShown: false }} />\n        <Stack.Screen name='Country Details' component={CountryDetails} options={{ headerShown: false }} />\n        <Stack.Screen name='Recommended' component={Recommended} options={{ headerShown: false }} />\n        <Stack.Screen name='Place Details' component={PlaceDetails} options={{ headerShown: false }} />\n        <Stack.Screen name='Hotel Details' component={HotelDetails} options={{ headerShown: false }} />\n        <Stack.Screen name='Hotel List' component={HotelList} options={{ headerShown: false }} />\n        <Stack.Screen name='Hotel Search' component={HotelSearch} options={{ headerShown: false }} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}